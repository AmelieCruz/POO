/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Factory;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import modelo.*;

/**
 *
 * @author andre
 */
public class GUIReceta extends javax.swing.JFrame {
    
    Cita cita;
    /**
     * Creates new form GUIReceta
     * @param cita
     */
    public GUIReceta(Cita cita) {
        initComponents();
        this.cita = cita;
        this.setTitle("Receta para: " + cita.getPaciente().getNombreCompleto());
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/images/iconRecetaMedica.png")).getImage());
         this.getContentPane().setBackground(new Color(0xE0F8F1)); 
        this.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollMedicamentos = new javax.swing.JScrollPane();
        txtAreaTratamiento = new javax.swing.JTextArea();
        lblMedicamentos = new javax.swing.JLabel();
        lblTratamiento = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaMedicamentos = new javax.swing.JTextArea();
        btnImprimirReceta = new javax.swing.JButton();
        btnAniadirReceta = new javax.swing.JButton();
        lblFecha = new javax.swing.JLabel();
        txtDia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtAreaTratamiento.setColumns(20);
        txtAreaTratamiento.setRows(5);
        scrollMedicamentos.setViewportView(txtAreaTratamiento);

        lblMedicamentos.setText("Medicametos");

        lblTratamiento.setText("Tratamiento");

        txtAreaMedicamentos.setColumns(20);
        txtAreaMedicamentos.setRows(5);
        jScrollPane2.setViewportView(txtAreaMedicamentos);

        btnImprimirReceta.setText("Imprimir receta");
        btnImprimirReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirRecetaActionPerformed(evt);
            }
        });

        btnAniadirReceta.setText("Añadir receta");
        btnAniadirReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAniadirRecetaActionPerformed(evt);
            }
        });

        lblFecha.setText("Duracion del tratamiento: ");

        txtDia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDiaMouseClicked(evt);
            }
        });
        txtDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaActionPerformed(evt);
            }
        });
        txtDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiaKeyReleased(evt);
            }
        });

        jLabel2.setText("Días");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblTratamiento)
                            .addComponent(lblMedicamentos)
                            .addComponent(btnImprimirReceta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFecha)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAniadirReceta)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(93, 93, 93))))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                    .addComponent(scrollMedicamentos))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha)
                    .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMedicamentos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(lblTratamiento)
                .addGap(11, 11, 11)
                .addComponent(scrollMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAniadirReceta)
                    .addComponent(btnImprimirReceta))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImprimirRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirRecetaActionPerformed
        if(analizarCampos())
        if(!cita.getReceta().isEmpty()){
            JOptionPane.showMessageDialog(this, cita.getReceta().get(0).imprimirReceta(), "Receta",  JOptionPane.INFORMATION_MESSAGE);
            this.dispose();;
        }
    }//GEN-LAST:event_btnImprimirRecetaActionPerformed

    private void btnAniadirRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAniadirRecetaActionPerformed
         if(analizarCampos()) {
             btnImprimirReceta.setText("Imprimir recetas");
         }
    }//GEN-LAST:event_btnAniadirRecetaActionPerformed
    
    /**
    * se analiza los campos del Frame, si logra encontrar todos los datos correctos
    * para generar una cita devuelve true, de lo contrario devuelve falso
    */
    private boolean analizarCampos(){
        if(revisarCampos()){
            Calendar fechaTermino = Calendar.getInstance();
            try{
                Calendar hoy = Calendar.getInstance();
                fechaTermino.set(Calendar.DAY_OF_YEAR, hoy.get(Calendar.DAY_OF_YEAR)+Integer.parseInt(txtDia.getText()));
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,"Ingrese una fecha válida","Error", JOptionPane.ERROR_MESSAGE);
                txtDia.setText("");
            }
            ArrayList<Medicamento> medicamentos = new ArrayList<>();
            if(analizarMedicamentos(medicamentos)){
                cita.setFecha(Calendar.getInstance());
                cita.getMedico().preescribeReceta(cita, txtAreaTratamiento.getText(), fechaTermino, medicamentos.toArray(new Medicamento[medicamentos.size()]));
                return true;
            }
        }else{
             JOptionPane.showMessageDialog(null,"Rellene todos los campos","Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }
    /**
    * se analiza el campo de medicamentos; si un medicamento no se en encuentra en el sistema:
    * pide al usuario si quiere ingresarlo, si no lo agrega, borra el medicamento
    * y devuelve falso, si encuentra todos los medicamentos devuelve verdadero
    */
    private boolean analizarMedicamentos( ArrayList<Medicamento> medicamentos){
            String meds = txtAreaMedicamentos.getText();
            meds+="\n";
            String temp ="";
            for(int i = 0; i<meds.length(); i++){
                if(meds.charAt(i)== ','||meds.charAt(i)== '\n'){
                    String tempMed = temp.toLowerCase();
                    String[] palabrasReservadas ={"0", "1", "2","3","4","5","6","7","8","9"
                    ," ml"," mg"," mcl"," mcg","mili","micro","gramos","litros", " "};
                    for(String s: palabrasReservadas){
                        tempMed = tempMed.replaceAll(s, "");
                    }
                    for(Medicamento med:Factory.getMedicamentos()){
                        if(med.getSustacia().toLowerCase().equals(tempMed.toLowerCase())){
                                if(med.getPresentacion().toLowerCase().equals(temp.replaceAll(tempMed,""))){
                                    medicamentos.add(med);
                                    temp="";
                                    break;
                                }
                        }
                    }
                    if(!temp.equals("")){
                        int opc = JOptionPane.showConfirmDialog(null ,"El medicamento no se encuentra en el sistema\n¿Desea agregarlo?","¡Hey!", JOptionPane.YES_NO_OPTION);
                        if(opc == 0){
                            GUIMedicamento medi = new GUIMedicamento(tempMed, temp.toLowerCase().replaceAll(tempMed, ""));
                        }else{
                             JOptionPane.showConfirmDialog(null ,"El medicamento se eliminará de la receta","¡Ok!", JOptionPane.YES_NO_OPTION);
                             txtAreaMedicamentos.setText(meds.replaceAll(temp, ""));
                        }
                        return false;
                    }
                }else{
                    temp += meds.charAt(i);
                }
            }
            return true;
    }
    private void txtDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaActionPerformed
       
    }//GEN-LAST:event_txtDiaActionPerformed

    private void txtDiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDiaMouseClicked
        if(txtDia.getText().equals("DD")){
            txtDia.setText("");
        }
    }//GEN-LAST:event_txtDiaMouseClicked

    private void txtDiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiaKeyReleased
        if(txtDia.getText().contains("DD")){
            txtDia.setText(txtDia.getText().replaceAll("DD", ""));
        }
    }//GEN-LAST:event_txtDiaKeyReleased
    
    /**
     * metodo que revista que los campos esten llenos
     */
    private boolean revisarCampos(){
        if(txtDia.getText().equals("")||txtDia.getText().equals("DD")){
            return false;
        }
        if(txtAreaTratamiento.getText().equals("")){
            return false;
        }
        return !txtAreaMedicamentos.getText().equals("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAniadirReceta;
    private javax.swing.JButton btnImprimirReceta;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblMedicamentos;
    private javax.swing.JLabel lblTratamiento;
    private javax.swing.JScrollPane scrollMedicamentos;
    private javax.swing.JTextArea txtAreaMedicamentos;
    private javax.swing.JTextArea txtAreaTratamiento;
    private javax.swing.JTextField txtDia;
    // End of variables declaration//GEN-END:variables
}
